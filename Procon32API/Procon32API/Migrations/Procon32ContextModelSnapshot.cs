// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Procon32API.Data;

namespace Procon32API.Migrations
{
    [DbContext(typeof(Procon32Context))]
    partial class Procon32ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Procon32API.Models.APIKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("APIKey");
                });

            modelBuilder.Entity("Procon32API.Models.File", b =>
                {
                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Path");

                    b.ToTable("File");
                });

            modelBuilder.Entity("Procon32API.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RawFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Procon32API.Models.Subject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indexes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSelectCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("PreviewFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rotations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SelectionCost")
                        .HasColumnType("int");

                    b.Property<string>("SubjectFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SwapCost")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseImageId");

                    b.ToTable("Subject");
                });

            modelBuilder.Entity("Procon32API.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Procon32API.Models.Image", b =>
                {
                    b.OwnsOne("Procon32API.Models.Size", "Size", b1 =>
                        {
                            b1.Property<string>("ImageId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Height")
                                .HasColumnType("int");

                            b1.Property<int>("Width")
                                .HasColumnType("int");

                            b1.HasKey("ImageId");

                            b1.ToTable("Image");

                            b1.WithOwner()
                                .HasForeignKey("ImageId");
                        });

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Procon32API.Models.Subject", b =>
                {
                    b.HasOne("Procon32API.Models.Image", "BaseImage")
                        .WithMany()
                        .HasForeignKey("BaseImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Procon32API.Models.CountXY", "PeaceCount", b1 =>
                        {
                            b1.Property<string>("SubjectId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("X")
                                .HasColumnType("int");

                            b1.Property<int>("Y")
                                .HasColumnType("int");

                            b1.HasKey("SubjectId");

                            b1.ToTable("Subject");

                            b1.WithOwner()
                                .HasForeignKey("SubjectId");
                        });

                    b.OwnsOne("Procon32API.Models.Size", "Size", b1 =>
                        {
                            b1.Property<string>("SubjectId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Height")
                                .HasColumnType("int");

                            b1.Property<int>("Width")
                                .HasColumnType("int");

                            b1.HasKey("SubjectId");

                            b1.ToTable("Subject");

                            b1.WithOwner()
                                .HasForeignKey("SubjectId");
                        });

                    b.Navigation("BaseImage");

                    b.Navigation("PeaceCount")
                        .IsRequired();

                    b.Navigation("Size");
                });
#pragma warning restore 612, 618
        }
    }
}
